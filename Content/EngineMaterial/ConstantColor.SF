#include "Material.SF"

// 外部访问变量定义
float4 UniformVector0; // Color


// 自发光
float3 GetMaterialEmissive( MaterialParameters Parameters )
{
	float4 Local1 = UniformVector0;

	return Local1.rgb;
}

// 漫反射
float3 GetMaterialDiffuseColor(MaterialParameters Parameters)
{
	float3 Local2 = float3(0.0f,0.0f,0.0f);

	return Local2;
}

// 法线
float3 GetMaterialNormal(MaterialParameters Parameters)
{
	float3 Local3 = Parameters.VertexNormal;

	return Local3;
}

// 高光
float3 GetMaterialSpecularColor(MaterialParameters Parameters)
{
 	float3 Local4 = float3(0.0f,0.0f,0.0f);

	return Local4;
}

float GetMaterialSpecularPower(MaterialParameters Parameters)
{
 	float  Local5 = 16.0f;

	return Local5;
}

// 不透明度
float GetMaterialOpacity( MaterialParameters Parameters )
{
 	float4 Local6 = UniformVector0;

	return Local6.a;
}


float3 GetMaterialPointLightTransfer( MaterialParameters Parameters )
{
      return PointLightPhong(
      GetMaterialEmissive(Parameters),
      GetMaterialDiffuseColor(Parameters),
      GetMaterialSpecularColor(Parameters),
      GetMaterialSpecularPower(Parameters),
      Parameters.TangentLightVector,
      Parameters.TangentCameraVector,
      Parameters.TangentNormal,
      Parameters.TangentReflectionVector
      );
}


float4 Main(       
      float2 TexCoord : TEXCOORD0,
      float3 Eye      : TEXCOORD5,
      float3 Light    : TEXCOORD6,
      float3 Normal   : TEXCOORD7 
      ) : COLOR0
{
   MaterialParameters Parameters;
   Parameters.TexCoords = TexCoord;
   Parameters.TangentLightVector = normalize(Light);
   Parameters.TangentCameraVector = normalize(Eye);
   Parameters.VertexNormal = Normal;
   Parameters.TangentNormal = GetMaterialNormal( Parameters );
   Parameters.TangentReflectionVector = normalize(reflect(-Parameters.TangentLightVector, Parameters.TangentNormal));
   

   return float4( GetMaterialPointLightTransfer( Parameters ),	GetMaterialOpacity( Parameters ) );
}

